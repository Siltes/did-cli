#!/usr/bin/env node
/**
 * A Decentralized Identifier client for managing DIDs.
 *
 * Copyright (c) 2017 Digital Bazaar, Inc. All rights reserved.
 */
const program = require('commander');
const drivers = require('./lib');

// setup the command line
program
  .usage('command [options]')
  .description('A program to manage Decentralized Identifiers (DIDs)')
  .on('--help', () => {
    console.log('\n   Examples:');
    console.log('    $ did create');
    console.log('    $ did authn-add -d 1234');
    console.log('    $ did authn-rotate -d 1234');
    console.log('    $ did authn-remove -d 1234');
    console.log('');
  })
  .option('-d, --did [did]', 'The DID to manage')
  .option('-m, --mode [mode]', 'Mode of operation',
    /^(live|test|dev)$/i, 'test')
  .option('-l, --ledger [ledger]', 'The DID ledger to use',
    /^(veres|sovrin|btcr|uport|consensys)$/i, 'veres')
  .option('-v, --verbose', 'Verbose output')
  .version('0.1.0');

// create a DID
program
  .command('create')
  .description('Create a DID')
  .action(_runLedgerCommand);

// get an existing DID Document
program
  .command('get')
  .description('Retrieves an existing DID Document')
  .option('-d, --did', 'The DID to manage')
  .action(_runLedgerCommand);

// add an authentication key to a DID Document
program
  .command('authn-add')
  .description('Add an authentication key to a DID')
  .option('-d, --did', 'The DID to manage')
  .action(_runLedgerCommand);

// rotate an authentication key for a DID document
program
  .command('authn-rotate')
  .description('Rotate an existing DID authentication key')
  .option('-d, --did', 'The DID to manage')
  .option('-o, --old-key', 'The old key identifier to rotate out')
  .action(_runLedgerCommand);

// add an object capability DID Document
program
  .command('ocap-add')
  .description('Add an object capability DID Document')
  .option('-d, --DID', 'The DID of the invocation target')
  .option('-i, --invoker', 'The DID of the invoker')
  .action(_runLedgerCommand);

// revoke an object capability DID Document
program
  .command('ocap-revoke')
  .description('Remove an object capability DID Document')
  .option('-d, --DID', 'The DID of the object capability to revoke')
  .action(_runLedgerCommand);

process.on('unhandledRejection', error => {
  console.error(error);
});

program.parse(process.argv);
if(program.args.length < 1) {
  program.help();
  process.exit(0);
}

function _runLedgerCommand() {
  try {
    const command = program.args[0]._name;
    const driver = drivers[program.ledger];
    if(!driver) {
      throw new Error(`"${program.ledger}" ledger not supported yet`);
    }
    console.log(
      `Executing "${command}" using ledger "${program.ledger}"...`);
    const api = driver[command];
    if(!api) {
      throw new Error(`"${command}" not implemented`);
    }
    api(program);
  } catch(e) {
    console.error(e);
  }
}
